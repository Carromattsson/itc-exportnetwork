class Crawler
  def base_url
    "http://www.trademap.org/"
  end

  def headers
    {"Cookie" => "ASP.NET_SessionId=hi2a3tuhtcx5pq333bv13n55; trademap.org=0B4F770BB0A083F83ED7AAD5BB19519412F072E6EC1CFEDA1D6D0165003FB11B917B0C2FB03B55FD6037174406135C211C7042081BECC89A410D00AD3CD3E46944F346B314019552848836C7FE2D4E07782E1687BD32C946C24D9DC2AACEF3F4AE8601491AC49EAE5D117D36D7FC9D705BC9E9D64F68CA1B53D0ED3277978E42AAFA3566A6A4A4E13826FCEBE54A807DBCE46AAF", "Content-Type" => "application/json; charset=utf-8"}
  end

  # Why the below function exists.
  # <html>
  #   <body>
  #     <select id="ctl00_NavigationContent_NavControl_DropDownList_Partner">
  #       <option value=282>Algeria</option>
  #       <option value=128>Andorra</option>
  #       <option value=024>Angola</option>
  #     </select>
  #   </body>
  # </html>
  def get_countries_selector
    "select#ctl00_NavigationContent_NavControl_DropDownList_Partner option"
  end

  def get_countries_options
    {"ctl00$PageContent$GridViewPanelControl$HiddenField_Prev_PageSizeTab" => 300}
  end

  def get_countries
    Hash[client_get("Country_SelProduct_TS.aspx", get_countries_options).search(get_countries_selector).map do |country_option|
      [country_option.children.first.text, country_option.attributes.value.value]
    end]
  end

  def download_dataset(country_code)
  end

  def get_dataset_url(country_code)
    Crawler.new.client_post("Country_SelProductCountry_TS.aspx", {"ctl00$NavigationContent$NavControl$DropDownList_Country" => "004", "ctl00$PageContent$GridViewPanelControl$DropDownList_NumTimePeriod" => 20, "ctl00$PageContent$GridViewPanelControl$DropDownList_PageSize" => 300}).search("#ctl00_PageContent_MyGridView1 tr")
  end

  def client_get(path, options={})
    puts base_url+path+"?"+options.parameterize
    Nokogiri.parse(
      RestClient::Request.execute(
       :method => :get,
       :url => base_url+path+"?"+options.parameterize,
       :headers => headers
      )
    )
  end

####NON ESSENTIAL IS BELOW.
  def get_selection_menu(country)
  end

  def client_post(path, options={})
    Nokogiri.parse(
      RestClient::Request.execute(
        method: :post, url: base_url+path, payload: options, headers: headers
      )
    )
  end



end
